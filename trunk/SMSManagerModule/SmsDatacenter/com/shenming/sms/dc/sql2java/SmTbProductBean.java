// --------------------------------------------------------
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
//    problems,
//    suggestions,
//    feedbacks,
//    ideas,
//  to http://sourceforge.net/projects/sql2java/
// --------------------------------------------------------

package com.shenming.sms.dc.sql2java;

// imports+ 

// imports- 

/**
 * SmTbProductBean is a mapping of sm_tb_product Table.
*/
public class SmTbProductBean
// extends+ 

// extends- 
{

    private Long prdId;
    private boolean prdId_is_modified = false;
    private boolean prdId_is_initialized = false;


    private Long prdTypeId;
    private boolean prdTypeId_is_modified = false;
    private boolean prdTypeId_is_initialized = false;


    private String name;
    private boolean name_is_modified = false;
    private boolean name_is_initialized = false;


    private Long price;
    private boolean price_is_modified = false;
    private boolean price_is_initialized = false;


    private Long priceVip;
    private boolean priceVip_is_modified = false;
    private boolean priceVip_is_initialized = false;


    private String suplyStatus;
    private boolean suplyStatus_is_modified = false;
    private boolean suplyStatus_is_initialized = false;


    private String formatDesc;
    private boolean formatDesc_is_modified = false;
    private boolean formatDesc_is_initialized = false;


    private String detailDesc;
    private boolean detailDesc_is_modified = false;
    private boolean detailDesc_is_initialized = false;


    private String sendArea;
    private boolean sendArea_is_modified = false;
    private boolean sendArea_is_initialized = false;


    private String sendDesc;
    private boolean sendDesc_is_modified = false;
    private boolean sendDesc_is_initialized = false;


    private String prdPicFile;
    private boolean prdPicFile_is_modified = false;
    private boolean prdPicFile_is_initialized = false;


    private Long owner;
    private boolean owner_is_modified = false;
    private boolean owner_is_initialized = false;

    private boolean _isNew = true;

    /**
     * Do not use this constructor directly, please use the factory method
     * available in the associated manager.
     */
    SmTbProductBean()
    {
    }

    /**
     * Getter method for prdId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.prd_id
     * <li>column size: 22
     * <li>jdbc type returned by the driver: Types.DECIMAL
     * </ul>
     *
     * @return the value of prdId
     */
    public Long getPrdId()
    {
        return prdId;
    }

    /**
     * Setter method for prdId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to prdId
     */
    public void setPrdId(Long newVal) {
        if ((newVal != null && this.prdId != null && (newVal.compareTo(this.prdId) == 0)) ||
            (newVal == null && this.prdId == null && prdId_is_initialized)) {
            return;
        }
        this.prdId = newVal;
        prdId_is_modified = true;
        prdId_is_initialized = true;
    }

    /**
     * Setter method for prdId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to prdId
     */
    public void setPrdId(long newVal) {
        setPrdId(new Long(newVal));
    }

    /**
     * Determines if the prdId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isPrdIdModified() {
        return prdId_is_modified;
    }

    /**
     * Determines if the prdId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isPrdIdInitialized() {
        return prdId_is_initialized;
    }

    /**
     * Getter method for prdTypeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.prd_type_id
     * <li>column size: 22
     * <li>jdbc type returned by the driver: Types.DECIMAL
     * </ul>
     *
     * @return the value of prdTypeId
     */
    public Long getPrdTypeId()
    {
        return prdTypeId;
    }

    /**
     * Setter method for prdTypeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to prdTypeId
     */
    public void setPrdTypeId(Long newVal) {
        if ((newVal != null && this.prdTypeId != null && (newVal.compareTo(this.prdTypeId) == 0)) ||
            (newVal == null && this.prdTypeId == null && prdTypeId_is_initialized)) {
            return;
        }
        this.prdTypeId = newVal;
        prdTypeId_is_modified = true;
        prdTypeId_is_initialized = true;
    }

    /**
     * Setter method for prdTypeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to prdTypeId
     */
    public void setPrdTypeId(long newVal) {
        setPrdTypeId(new Long(newVal));
    }

    /**
     * Determines if the prdTypeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isPrdTypeIdModified() {
        return prdTypeId_is_modified;
    }

    /**
     * Determines if the prdTypeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isPrdTypeIdInitialized() {
        return prdTypeId_is_initialized;
    }

    /**
     * Getter method for name.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.name
     * <li>column size: 50
     * <li>jdbc type returned by the driver: Types.VARCHAR
     * </ul>
     *
     * @return the value of name
     */
    public String getName()
    {
        return name;
    }

    /**
     * Setter method for name.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to name
     */
    public void setName(String newVal) {
        if ((newVal != null && this.name != null && (newVal.compareTo(this.name) == 0)) ||
            (newVal == null && this.name == null && name_is_initialized)) {
            return;
        }
        this.name = newVal;
        name_is_modified = true;
        name_is_initialized = true;
    }

    /**
     * Determines if the name has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isNameModified() {
        return name_is_modified;
    }

    /**
     * Determines if the name has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isNameInitialized() {
        return name_is_initialized;
    }

    /**
     * Getter method for price.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.price
     * <li>column size: 22
     * <li>jdbc type returned by the driver: Types.DECIMAL
     * </ul>
     *
     * @return the value of price
     */
    public Long getPrice()
    {
        return price;
    }

    /**
     * Setter method for price.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to price
     */
    public void setPrice(Long newVal) {
        if ((newVal != null && this.price != null && (newVal.compareTo(this.price) == 0)) ||
            (newVal == null && this.price == null && price_is_initialized)) {
            return;
        }
        this.price = newVal;
        price_is_modified = true;
        price_is_initialized = true;
    }

    /**
     * Setter method for price.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to price
     */
    public void setPrice(long newVal) {
        setPrice(new Long(newVal));
    }

    /**
     * Determines if the price has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isPriceModified() {
        return price_is_modified;
    }

    /**
     * Determines if the price has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isPriceInitialized() {
        return price_is_initialized;
    }

    /**
     * Getter method for priceVip.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.price_vip
     * <li>column size: 22
     * <li>jdbc type returned by the driver: Types.DECIMAL
     * </ul>
     *
     * @return the value of priceVip
     */
    public Long getPriceVip()
    {
        return priceVip;
    }

    /**
     * Setter method for priceVip.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to priceVip
     */
    public void setPriceVip(Long newVal) {
        if ((newVal != null && this.priceVip != null && (newVal.compareTo(this.priceVip) == 0)) ||
            (newVal == null && this.priceVip == null && priceVip_is_initialized)) {
            return;
        }
        this.priceVip = newVal;
        priceVip_is_modified = true;
        priceVip_is_initialized = true;
    }

    /**
     * Setter method for priceVip.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to priceVip
     */
    public void setPriceVip(long newVal) {
        setPriceVip(new Long(newVal));
    }

    /**
     * Determines if the priceVip has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isPriceVipModified() {
        return priceVip_is_modified;
    }

    /**
     * Determines if the priceVip has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isPriceVipInitialized() {
        return priceVip_is_initialized;
    }

    /**
     * Getter method for suplyStatus.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.suply_status
     * <li>column size: 2
     * <li>jdbc type returned by the driver: Types.VARCHAR
     * </ul>
     *
     * @return the value of suplyStatus
     */
    public String getSuplyStatus()
    {
        return suplyStatus;
    }

    /**
     * Setter method for suplyStatus.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to suplyStatus
     */
    public void setSuplyStatus(String newVal) {
        if ((newVal != null && this.suplyStatus != null && (newVal.compareTo(this.suplyStatus) == 0)) ||
            (newVal == null && this.suplyStatus == null && suplyStatus_is_initialized)) {
            return;
        }
        this.suplyStatus = newVal;
        suplyStatus_is_modified = true;
        suplyStatus_is_initialized = true;
    }

    /**
     * Determines if the suplyStatus has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isSuplyStatusModified() {
        return suplyStatus_is_modified;
    }

    /**
     * Determines if the suplyStatus has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isSuplyStatusInitialized() {
        return suplyStatus_is_initialized;
    }

    /**
     * Getter method for formatDesc.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.format_desc
     * <li>column size: 150
     * <li>jdbc type returned by the driver: Types.VARCHAR
     * </ul>
     *
     * @return the value of formatDesc
     */
    public String getFormatDesc()
    {
        return formatDesc;
    }

    /**
     * Setter method for formatDesc.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to formatDesc
     */
    public void setFormatDesc(String newVal) {
        if ((newVal != null && this.formatDesc != null && (newVal.compareTo(this.formatDesc) == 0)) ||
            (newVal == null && this.formatDesc == null && formatDesc_is_initialized)) {
            return;
        }
        this.formatDesc = newVal;
        formatDesc_is_modified = true;
        formatDesc_is_initialized = true;
    }

    /**
     * Determines if the formatDesc has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isFormatDescModified() {
        return formatDesc_is_modified;
    }

    /**
     * Determines if the formatDesc has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isFormatDescInitialized() {
        return formatDesc_is_initialized;
    }

    /**
     * Getter method for detailDesc.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.detail_desc
     * <li>column size: 200
     * <li>jdbc type returned by the driver: Types.VARCHAR
     * </ul>
     *
     * @return the value of detailDesc
     */
    public String getDetailDesc()
    {
        return detailDesc;
    }

    /**
     * Setter method for detailDesc.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to detailDesc
     */
    public void setDetailDesc(String newVal) {
        if ((newVal != null && this.detailDesc != null && (newVal.compareTo(this.detailDesc) == 0)) ||
            (newVal == null && this.detailDesc == null && detailDesc_is_initialized)) {
            return;
        }
        this.detailDesc = newVal;
        detailDesc_is_modified = true;
        detailDesc_is_initialized = true;
    }

    /**
     * Determines if the detailDesc has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isDetailDescModified() {
        return detailDesc_is_modified;
    }

    /**
     * Determines if the detailDesc has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isDetailDescInitialized() {
        return detailDesc_is_initialized;
    }

    /**
     * Getter method for sendArea.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.send_area
     * <li>column size: 50
     * <li>jdbc type returned by the driver: Types.VARCHAR
     * </ul>
     *
     * @return the value of sendArea
     */
    public String getSendArea()
    {
        return sendArea;
    }

    /**
     * Setter method for sendArea.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to sendArea
     */
    public void setSendArea(String newVal) {
        if ((newVal != null && this.sendArea != null && (newVal.compareTo(this.sendArea) == 0)) ||
            (newVal == null && this.sendArea == null && sendArea_is_initialized)) {
            return;
        }
        this.sendArea = newVal;
        sendArea_is_modified = true;
        sendArea_is_initialized = true;
    }

    /**
     * Determines if the sendArea has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isSendAreaModified() {
        return sendArea_is_modified;
    }

    /**
     * Determines if the sendArea has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isSendAreaInitialized() {
        return sendArea_is_initialized;
    }

    /**
     * Getter method for sendDesc.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.send_desc
     * <li>column size: 200
     * <li>jdbc type returned by the driver: Types.VARCHAR
     * </ul>
     *
     * @return the value of sendDesc
     */
    public String getSendDesc()
    {
        return sendDesc;
    }

    /**
     * Setter method for sendDesc.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to sendDesc
     */
    public void setSendDesc(String newVal) {
        if ((newVal != null && this.sendDesc != null && (newVal.compareTo(this.sendDesc) == 0)) ||
            (newVal == null && this.sendDesc == null && sendDesc_is_initialized)) {
            return;
        }
        this.sendDesc = newVal;
        sendDesc_is_modified = true;
        sendDesc_is_initialized = true;
    }

    /**
     * Determines if the sendDesc has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isSendDescModified() {
        return sendDesc_is_modified;
    }

    /**
     * Determines if the sendDesc has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isSendDescInitialized() {
        return sendDesc_is_initialized;
    }

    /**
     * Getter method for prdPicFile.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.prd_pic_file
     * <li>column size: 200
     * <li>jdbc type returned by the driver: Types.VARCHAR
     * </ul>
     *
     * @return the value of prdPicFile
     */
    public String getPrdPicFile()
    {
        return prdPicFile;
    }

    /**
     * Setter method for prdPicFile.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to prdPicFile
     */
    public void setPrdPicFile(String newVal) {
        if ((newVal != null && this.prdPicFile != null && (newVal.compareTo(this.prdPicFile) == 0)) ||
            (newVal == null && this.prdPicFile == null && prdPicFile_is_initialized)) {
            return;
        }
        this.prdPicFile = newVal;
        prdPicFile_is_modified = true;
        prdPicFile_is_initialized = true;
    }

    /**
     * Determines if the prdPicFile has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isPrdPicFileModified() {
        return prdPicFile_is_modified;
    }

    /**
     * Determines if the prdPicFile has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isPrdPicFileInitialized() {
        return prdPicFile_is_initialized;
    }

    /**
     * Getter method for owner.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_tb_product.owner
     * <li>column size: 22
     * <li>jdbc type returned by the driver: Types.DECIMAL
     * </ul>
     *
     * @return the value of owner
     */
    public Long getOwner()
    {
        return owner;
    }

    /**
     * Setter method for owner.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to owner
     */
    public void setOwner(Long newVal) {
        if ((newVal != null && this.owner != null && (newVal.compareTo(this.owner) == 0)) ||
            (newVal == null && this.owner == null && owner_is_initialized)) {
            return;
        }
        this.owner = newVal;
        owner_is_modified = true;
        owner_is_initialized = true;
    }

    /**
     * Setter method for owner.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to owner
     */
    public void setOwner(long newVal) {
        setOwner(new Long(newVal));
    }

    /**
     * Determines if the owner has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isOwnerModified() {
        return owner_is_modified;
    }

    /**
     * Determines if the owner has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isOwnerInitialized() {
        return owner_is_initialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew() {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew) {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified() {
        return prdId_is_modified ||
		prdTypeId_is_modified ||
		name_is_modified ||
		price_is_modified ||
		priceVip_is_modified ||
		suplyStatus_is_modified ||
		formatDesc_is_modified ||
		detailDesc_is_modified ||
		sendArea_is_modified ||
		sendDesc_is_modified ||
		prdPicFile_is_modified ||
		owner_is_modified;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified() {
        prdId_is_modified = false;
        prdTypeId_is_modified = false;
        name_is_modified = false;
        price_is_modified = false;
        priceVip_is_modified = false;
        suplyStatus_is_modified = false;
        formatDesc_is_modified = false;
        detailDesc_is_modified = false;
        sendArea_is_modified = false;
        sendDesc_is_modified = false;
        prdPicFile_is_modified = false;
        owner_is_modified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(SmTbProductBean bean) {
        setPrdId(bean.getPrdId());
        setPrdTypeId(bean.getPrdTypeId());
        setName(bean.getName());
        setPrice(bean.getPrice());
        setPriceVip(bean.getPriceVip());
        setSuplyStatus(bean.getSuplyStatus());
        setFormatDesc(bean.getFormatDesc());
        setDetailDesc(bean.getDetailDesc());
        setSendArea(bean.getSendArea());
        setSendDesc(bean.getSendDesc());
        setPrdPicFile(bean.getPrdPicFile());
        setOwner(bean.getOwner());
    }

    /**
     * Returns the object string representation.
     *
     * @return the object as a string
     */
    public String toString() {
        return   "\n[sm_tb_product] "
                 + "\n - sm_tb_product.prd_id = " + (prdId_is_initialized ? ("[" + (prdId == null ? null : prdId.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.prd_type_id = " + (prdTypeId_is_initialized ? ("[" + (prdTypeId == null ? null : prdTypeId.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.name = " + (name_is_initialized ? ("[" + (name == null ? null : name.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.price = " + (price_is_initialized ? ("[" + (price == null ? null : price.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.price_vip = " + (priceVip_is_initialized ? ("[" + (priceVip == null ? null : priceVip.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.suply_status = " + (suplyStatus_is_initialized ? ("[" + (suplyStatus == null ? null : suplyStatus.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.format_desc = " + (formatDesc_is_initialized ? ("[" + (formatDesc == null ? null : formatDesc.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.detail_desc = " + (detailDesc_is_initialized ? ("[" + (detailDesc == null ? null : detailDesc.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.send_area = " + (sendArea_is_initialized ? ("[" + (sendArea == null ? null : sendArea.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.send_desc = " + (sendDesc_is_initialized ? ("[" + (sendDesc == null ? null : sendDesc.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.prd_pic_file = " + (prdPicFile_is_initialized ? ("[" + (prdPicFile == null ? null : prdPicFile.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_tb_product.owner = " + (owner_is_initialized ? ("[" + (owner == null ? null : owner.toString()) + "]") : "not initialized") + ""
            ;
    }

// class+ 

// class- 
}
