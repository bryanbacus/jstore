// --------------------------------------------------------
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
//    problems,
//    suggestions,
//    feedbacks,
//    ideas,
//  to http://sourceforge.net/projects/sql2java/
// --------------------------------------------------------

package com.shenming.sms.dc.sql2java;

// imports+ 

// imports- 

/**
 * SmVwSaleSumBean is a mapping of sm_vw_sale_sum Table.
*/
public class SmVwSaleSumBean
// extends+ 

// extends- 
{

    private Long itemSeq;
    private boolean itemSeq_is_modified = false;
    private boolean itemSeq_is_initialized = false;


    private Long saleTotal;
    private boolean saleTotal_is_modified = false;
    private boolean saleTotal_is_initialized = false;

    private boolean _isNew = true;

    /**
     * Do not use this constructor directly, please use the factory method
     * available in the associated manager.
     */
    SmVwSaleSumBean()
    {
    }

    /**
     * Getter method for itemSeq.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_vw_sale_sum.item_seq
     * <li>column size: 22
     * <li>jdbc type returned by the driver: Types.DECIMAL
     * </ul>
     *
     * @return the value of itemSeq
     */
    public Long getItemSeq()
    {
        return itemSeq;
    }

    /**
     * Setter method for itemSeq.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to itemSeq
     */
    public void setItemSeq(Long newVal) {
        if ((newVal != null && this.itemSeq != null && (newVal.compareTo(this.itemSeq) == 0)) ||
            (newVal == null && this.itemSeq == null && itemSeq_is_initialized)) {
            return;
        }
        this.itemSeq = newVal;
        itemSeq_is_modified = true;
        itemSeq_is_initialized = true;
    }

    /**
     * Setter method for itemSeq.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to itemSeq
     */
    public void setItemSeq(long newVal) {
        setItemSeq(new Long(newVal));
    }

    /**
     * Determines if the itemSeq has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isItemSeqModified() {
        return itemSeq_is_modified;
    }

    /**
     * Determines if the itemSeq has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isItemSeqInitialized() {
        return itemSeq_is_initialized;
    }

    /**
     * Getter method for saleTotal.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: sm_vw_sale_sum.sale_total
     * <li>column size: 44
     * <li>jdbc type returned by the driver: Types.DECIMAL
     * </ul>
     *
     * @return the value of saleTotal
     */
    public Long getSaleTotal()
    {
        return saleTotal;
    }

    /**
     * Setter method for saleTotal.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to saleTotal
     */
    public void setSaleTotal(Long newVal) {
        if ((newVal != null && this.saleTotal != null && (newVal.compareTo(this.saleTotal) == 0)) ||
            (newVal == null && this.saleTotal == null && saleTotal_is_initialized)) {
            return;
        }
        this.saleTotal = newVal;
        saleTotal_is_modified = true;
        saleTotal_is_initialized = true;
    }

    /**
     * Setter method for saleTotal.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to saleTotal
     */
    public void setSaleTotal(long newVal) {
        setSaleTotal(new Long(newVal));
    }

    /**
     * Determines if the saleTotal has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isSaleTotalModified() {
        return saleTotal_is_modified;
    }

    /**
     * Determines if the saleTotal has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isSaleTotalInitialized() {
        return saleTotal_is_initialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew() {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew) {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified() {
        return itemSeq_is_modified ||
		saleTotal_is_modified;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified() {
        itemSeq_is_modified = false;
        saleTotal_is_modified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(SmVwSaleSumBean bean) {
        setItemSeq(bean.getItemSeq());
        setSaleTotal(bean.getSaleTotal());
    }

    /**
     * Returns the object string representation.
     *
     * @return the object as a string
     */
    public String toString() {
        return   "\n[sm_vw_sale_sum] "
                 + "\n - sm_vw_sale_sum.item_seq = " + (itemSeq_is_initialized ? ("[" + (itemSeq == null ? null : itemSeq.toString()) + "]") : "not initialized") + ""
                 + "\n - sm_vw_sale_sum.sale_total = " + (saleTotal_is_initialized ? ("[" + (saleTotal == null ? null : saleTotal.toString()) + "]") : "not initialized") + ""
            ;
    }

// class+ 

// class- 
}
